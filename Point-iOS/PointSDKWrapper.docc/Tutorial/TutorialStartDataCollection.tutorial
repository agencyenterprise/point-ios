@Tutorial(time: 20) {
    @Intro(title: "Start Collecting Data") {
        Now that you have set up the SDK, authenticated your user, and already got the user past data in the device, it's time to enable the data listeners to keep Point's Health Service up to date with new samples.
        
        This is important to keep all generated metrics and insights updated and relevant.
        
        Learn how to use Point HealthKit, the SDK service that integrates with Apple's HealthKit to collect user Health data.
    }
    
    @Section(title: "Listeners") {
        @ContentAndMedia {
            As Point Health Service generates some of the metrics and insights in a daily or weekly basis, it's important to keep it as most updated as possibly to avoid generating them with missing data. This way, we cannot just rely on the user to periodically open their app so we can upload their Health data.
            
            For this, we can use listeners, short lived tasks that run periodically, even in background (or when the app is closed), to upload new data.
        }
        
        @Steps {
            @Step {
                Our first step is allowing HealthKit's background deliveries. Go back to your Project screen -> Select your Target -> Signing & Capabilities. In HealthKit, check the "Background Delivery" checkbox.
                
                This will allow HealthKit to wake up your app periodically when new samples are added. This happens when your app is in background or if it's closed.
                
                @Image(source: "CheckBackgroundDelivery", alt: "The image shows the 'Signing & Capabilities' screen of the main Target. The 'Background Delivery' checkbox under HealthKit session is enabled")
            }
            
            @Step {
                Click in "+" to add a new capability. Look for "Background Modes" and add it.

                @Image(source: "BackgroundModes", alt: "The image shows a the capability search screen, with the 'Background Mode' capability selected")
            }

            @Step {
                Check the "Background Fetch" checkbox.
                
                This will enable us to fetch data when the app is backgrounded.
                
                @Image(source: "BackgroundFetch", alt: "The image shows the Background Fetch checkbox selected under the Background Modes capability section.")
            }
            
            @Step {
                Go back to the AppDelegate. Create a Task and call `Point.healthKit.startAllListeners()`.
                
                This will create and run Observer Queries that keep listening for HealthKit notification of new samples. Apple suggests running this on the App Delegate to make sure these queries are running every time your app is launched or waken up.
                
                @Code(name: "AppDelegate.swift", file: "TutorialCodeAppDelegate4.swift", previousFile: "TutorialCodeAppDelegate3.swift")
            }
        }
    }
}
