{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Point Health Kit abstracts the main functionalities from Apple’s "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/healthkit"},{"type":"text","text":" in order to collect and upload health samples in an optimized and easy-to-implement way."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"All methods are optimized for performance and low battery draining. The SDK has several internal optimizations, including a small sqlite database to control and avoid uploading duplicated samples, reducing the network requests and data usage."}]},{"type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All methods results are discardable and meant to be used for debug\/information purposes only, we handle all the data internally so that you dont have to worry about processing or uploading the samples."}]}]},{"type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All health kit methods require previous user authorization on the data types. Check the "},{"type":"strong","inlineContent":[{"type":"text","text":"Permissions"}]},{"type":"text","text":" session."}]}]},{"anchor":"Setup","level":2,"type":"heading","text":"Setup"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Calling "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/Point\/setupHealthkitIntegration(queryTypes:)"},{"type":"text","text":" will instantiate "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/HealthKitManager"},{"type":"text","text":" within the SDK and it will be available for you to use. As this is the only way to create an instance of HealthKitManager, we suggest calling it as soon as possible, just after "},{"type":"codeVoice","code":"Point\/setup(clientId:clientSecret:fitbitClientId:environment:)"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When setting up, you will need to send a Set of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/HealthQueryType"},{"type":"text","text":". These are the types of Health data you wish to collect when using the SDK. Assume that all the following features of this article will only work for the types you define in this step."}]},{"type":"codeListing","syntax":"swift","code":["class AppDelegate: NSObject, UIApplicationDelegate {","    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey : Any]? = nil) -> Bool {","        Point.setup(","            clientId: \"Your Client ID\",","            clientSecret: \"Your Client Secret\",","            environment: appEnvironment","        )","        Point.setupHealthkitIntegration(queryTypes: Set(HealthQueryType.allCases))","        ...","    }","...","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function will have no effect if you call it with an empty set of types. Also, as "},{"overridingTitleInlineContent":[{"type":"text","text":"HealthKit"}],"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/healthkit","overridingTitle":"HealthKit"},{"type":"text","text":" is only available on iOS devices, this function will have no effect on other devices, like MacOS or iPadOS."}]},{"type":"aside","style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This function returns a discardable reference to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/HealthKitManager"},{"type":"text","text":" if successful, although, you don’t need to hold it if you don’t need it, as it will always be available as a variable in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/Point"},{"type":"text","text":". Also, subsequent calls of this function will only return this same reference."}]}]},{"anchor":"Permissions","level":2,"type":"heading","text":"Permissions"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Request authorization for all types defined on setup. Calling this function will display an iOS modal asking for the requested authorizations. We recommend calling this before your first call of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/Point\/setUserToken(accessToken:shouldSyncData:)"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["@MainActor","func requestPermissions() async {","    guard let pointHealthKitManager = Point.healthKit else { return }","    do {","        try await pointHealthKitManager.requestAuthorizationsIfPossible()","    } catch {","        print(\"Error requesting authorization: \\(error.localizedDescription)\")","    }","}"]},{"type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Using any of the following features of this article without having requested permissions previously will result in failure."}]}]},{"anchor":"Background-Listeners","level":2,"type":"heading","text":"Background Listeners"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Background listeners run on top of HealthKit’s background delivery. When a background listener is set, it wakes up your app whenever a process adds new samples of the specified type, and then syncs those to the Point database."}]},{"anchor":"Start","level":3,"type":"heading","text":"Start"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You need to start the background listeners you wish to run. This must be done as soon as possible, such as when the app finishes launching."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can start background listeners for all types set in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/Point\/setupHealthkitIntegration(queryTypes:)"}]},{"type":"codeListing","syntax":"swift","code":["func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey : Any]? = nil) -> Bool {","    Point.setup(","        clientId: \"You Client ID\",","        clientSecret: \"Your Client Secret\",","        environment: appEnvironment","    )","    Point.setupHealthkitIntegration(queryTypes: Set(HealthQueryType.allCases))","    Task {","        guard let healthKitManager = Point.healthKit else { return }","        ","        do {","            try await healthKitManager.startAllBackgroundListeners()","        } catch {","            print(error.localizedDescription)","        }","    }","    return true","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also start a background listener for just a specific "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/HealthQueryType"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["func startHeartRateBackgroundListener() async {","    guard let healthKitManager = Point.healthKit else { return }","    ","    await healthKitManager.startBackgroundListeners(for: .heartRate)","}"]},{"type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If you plan on supporting background listeners, set up all your types as soon as possible in application launch, for more information see: "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/healthkit\/hkhealthstore\/1614175-enablebackgrounddelivery"}]}]},{"type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For iOS 15 you must enable the HealthKit Background Delivery by adding the com.apple.developer.healthkit.background-delivery entitlement to your app."}]}]},{"type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Since the listeners are meant to be started in application launch, on the very first usage\/session the queries will fail and not stay alive. This is because you start background listeners before asking for user permissions. If you want to collect data in background from the first moment, we recommend also calling the start methods once after requesting user permissions."}]}]},{"anchor":"Stop","level":3,"type":"heading","text":"Stop"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Stopping a background listener will make any changes made on Apple’s Health unnoticeable while the app is not on foreground."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can stop background delivery for specific "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/HealthQueryType"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["func stopBackgroundListener() async {","    do {","        guard let healthKitManager = Point.healthKit else { return }","        try await healthKitManager.disableBackgroundListeners(for: .heartRate)","    } catch {","        print(\"Error disabling background delivery: \\(error.localizedDescription)\")","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Or you can stop all background listeners:"}]},{"type":"codeListing","syntax":"swift","code":["func stopAllBackgroundListeners() async {","    do {","        guard let healthKitManager = Point.healthKit else { return }","        try await healthKitManager.disableAllBackgroundListeners()","    } catch {","        print(\"Error disabling background delivery: \\(error.localizedDescription)\")","    }","}"]},{"type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Avoid stopping background listeners in the application lifecycle, we recommend using it only on user logout."}]}]},{"anchor":"Foreground-Listeners","level":2,"type":"heading","text":"Foreground Listeners"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A foreground listener runs a query that monitors Apple’s Health while your app is on foreground. They can be used to automatically get and upload new data from Apple’s Health to the Point database as soon as they are available."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You must create a listener for each type you wish to listen. Enabling a foreground listener automatically triggers a "},{"type":"strong","inlineContent":[{"type":"text","text":"Latest Data"}]},{"type":"text","text":" sync."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can start all listeners by calling "},{"type":"codeVoice","code":"enableAllForegroundListeners()"},{"type":"text","text":". This will start a foreground listeners for each one of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/HealthQueryType"},{"type":"text","text":" you have requested to use on the SDK set up."}]},{"type":"codeListing","syntax":"swift","code":["do {","    try await healthKitManager.enableAllForegroundListeners()","} catch {","    print(\"Error starting foreground listeners \\(error)\")","}"]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The starting date of the listener query is the date and time you create the listener. It won’t listen for past data."}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To stop all listeners you can call "},{"type":"codeVoice","code":"stopAllForegroundListeners"},{"type":"text","text":". To stop a specific listener, you can call "},{"type":"codeVoice","code":"stopListener"}]},{"type":"codeListing","syntax":"swift","code":["func stopListener() {","    stopAllForegroundListeners()","    \/\/ or","    stopListener(type: .workout)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Alternatively, if you wish to keep track of the sync result of each new sample, you can call "},{"type":"codeVoice","code":"listen(type: HealthQueryType)"},{"type":"text","text":", which returns a "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/asyncthrowingstream"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["let workoutListenerTask: Task<(), Error>?","","func listenWorkoutSamples() async {","    do {","        let stream = try await healthKitManager.listen(type: .workout)","        workoutListenerTask = Task { @MainActor in","            do {","                for try await sampleResult in stream {","                    print(sampleResult)","                }","            } catch {","                print(error.localizedDescription)","            }","        }","    } catch {","        print(\"Error starting workout foreground listener \\(error.localizedDescription)\")","    }","}"]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Canceling the Task which contains the "},{"type":"codeVoice","code":"AsyncThrowingStream"},{"type":"text","text":" you received will stop the listener."}]}]},{"anchor":"Historical-Data","level":2,"type":"heading","text":"Historical Data"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Helper functions to get the user past data, optimized to handle large amounts of data, using multiple Tasks and uploading in batches."}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Fetches and uploads the user past data for all "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/HealthQueryType"},{"type":"text","text":" defined in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/Point\/setupHealthkitIntegration(queryTypes:)"},{"type":"text","text":". This is executed automatically when you set the user token for the first time in a session, so you don’t need to call this function manually unless you turned automatic syncing off."}]},{"type":"codeListing","syntax":"swift","code":["func syncAllHistoricalData() async {","    do {","        guard let healthKitManager = Point.healthKit else { return }","        let result = try await healthKitManager.syncAllHistoricalData()","        print(\"Historical data result: \\(result)\")","    } catch {","        print(\"Error running historical data: \\(error.localizedDescription)\")","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also run a manual sync for specific "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/HealthQueryType"},{"type":"text","text":", but we encourage not to do it and let the automated process handle that."}]},{"type":"codeListing","syntax":"swift","code":["func syncHistoricalDataForType(type: HealthQueryType) async {","    do {","        guard let healthKitManager = Point.healthKit else { return }","        let result = try await healthKitManager.syncHistoricalData(sampleType: type)","        print(\"Historical data result: \\(result)\")","    } catch {","        print(\"Error running historical data: \\(error.localizedDescription)\")","    }","}"]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All historical data methods will query samples from an interval before the oldest sample date of the given type. The interval can be from 1 to 6 months, with 3 as default. If the oldest sample is older than one year, no query will be done. The starting date of the query is limited to one year before the current date."}]}]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Automatic “historical data syncing” is enabled by default. To turn it off, just set "},{"type":"codeVoice","code":"shouldSyncData"},{"type":"text","text":" parameter as false on the "},{"type":"codeVoice","code":"setAccessToken"},{"type":"text","text":" method. We strongly recommend to keep it enabled to acquire more accurate and personalized user data."}]}]},{"anchor":"Latest-Data","level":2,"type":"heading","text":"Latest Data"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Helper functions to fill the gap from the latest sync until the current date."}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Fetches and uploads the user latest data for a specific type. This is executed automatically when you setup a foreground listener for this type, so you don’t need to call this function manually unless you turned automatic syncing off."}]},{"type":"codeListing","syntax":"swift","code":["func getLatestDataForType(type: HealthQueryType) async {","    do {","        guard let healthKitManager = Point.healthKit else { return }","        let result = try await healthKitManager.syncLatestData(sampleType: type) ","        print(\"Latest data result: \\(result)\")","    } catch {","        print(\"Error running historical data: \\(error.localizedDescription)\")","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can additionally retrieve the latest samples of all "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/HealthQueryType"},{"type":"text","text":" you have requested permission."}]},{"type":"codeListing","syntax":"swift","code":["func getAllRecentData() async {","    do {","        guard let healthKitManager = Point.healthKit else { return }","        let result = try await healthKitManager.syncAllLatestData()","        print(\"Latest data result: \\(result)\")","    } catch {","        print(\"Error running historical data: \\(error.localizedDescription)\")","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"All latest data queries will query samples from the latest sample date up until now. If the latest sample date is older than six months, then the query will be made from six months up until now."}]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Automatic “latest data syncing” is enabled as default. To turn it off for a specific type you must set the type value in "},{"type":"codeVoice","code":"shouldSyncLatestDataBeforeListening"},{"type":"text","text":" dictionary to "},{"type":"codeVoice","code":"false"},{"type":"text","text":" before setting up the foreground listener. We strongly recommend to keep it enabled to avoid losing user samples."}]}]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All latest data functions are optimized to handle large amounts of data, using multiple Tasks and uploading data in batches."}]}]},{"anchor":"Manual-Sync","level":2,"type":"heading","text":"Manual Sync"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Runs a custom query and sync the result with Point database."}]},{"type":"codeListing","syntax":"swift","code":["func syncHeartRate() async -> SyncResult? {","    guard let healthKitManager = Point.healthKit else { return nil }","    do {","        let startDate = Calendar.current.date(byAdding: .weekOfYear, value: -1, to: Date())!","        return try await healthKitManager.sync(query: .heartRate(startDate: startDate))","    } catch {","        print(error.localizedDescription)","        return nil","    }","}"]},{"type":"aside","style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You can manually run any available query using a custom date range and other filters."}]}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/pointsdk\/pointhealthkit"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/PointHealthKit","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Use the Point Health Kit to collect and upload health samples to the Point Database."}],"kind":"article","metadata":{"modules":[{"name":"PointSDK"}],"role":"collectionGroup","title":"Point Health Kit"},"hierarchy":{"paths":[["doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK"]]},"topicSections":[{"title":"HealthKit","identifiers":["doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/HealthKitManager","doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/HealthQuery","doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/HealthQueryType","doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/ActiveEnergyBurnedQuery","doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/BasalEnergyBurnedQuery","doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/HeartRateQuery","doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/HeartRateVariabilitySDNNQuery","doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/MindfulnessQuery","doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/RestingHeartRateQuery","doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/SleepQuery","doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/StepCountQuery","doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/Vo2MaxQuery","doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/WorkoutQuery"]},{"title":"API Data","identifiers":["doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/SyncResult","doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/BatchSyncResult"]}],"references":{"https://developer.apple.com/documentation/healthkit/hkhealthstore/1614175-enablebackgrounddelivery":{"title":"Enable background delivery official docs","titleInlineContent":[{"type":"text","text":"Enable background delivery official docs"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/healthkit\/hkhealthstore\/1614175-enablebackgrounddelivery","url":"https:\/\/developer.apple.com\/documentation\/healthkit\/hkhealthstore\/1614175-enablebackgrounddelivery"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/HealthKitManager":{"role":"symbol","title":"HealthKitManager","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HealthKitManager"}],"abstract":[{"type":"text","text":"Manages the integration with "},{"type":"codeVoice","code":"HealthKit"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/HealthKitManager","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HealthKitManager"}],"url":"\/documentation\/pointsdk\/healthkitmanager"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/Point":{"role":"symbol","title":"Point","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Point"}],"abstract":[{"type":"text","text":"Contains important SDK configuration methods such as "},{"type":"codeVoice","code":"setup"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/Point","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Point"}],"url":"\/documentation\/pointsdk\/point"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK":{"role":"collection","title":"PointSDK","abstract":[{"type":"text","text":"Access comprehensive health and fitness user data collected from across multiple wearable devices."}],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK","kind":"symbol","type":"topic","url":"\/documentation\/pointsdk"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/HealthQuery":{"role":"symbol","title":"HealthQuery","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HealthQuery"}],"abstract":[{"type":"text","text":"Don’t implement this protocol."}],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/HealthQuery","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HealthQuery"}],"url":"\/documentation\/pointsdk\/healthquery"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/Point/setupHealthkitIntegration(queryTypes:)":{"role":"symbol","title":"setupHealthkitIntegration(queryTypes:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setupHealthkitIntegration"},{"kind":"text","text":"("},{"kind":"externalParam","text":"queryTypes"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"HealthQueryType","preciseIdentifier":"s:8PointSDK15HealthQueryTypeO"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"HealthKitManager","preciseIdentifier":"s:8PointSDK16HealthKitManagerP"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Sets up Apple’s Healthkit integration."}],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/Point\/setupHealthkitIntegration(queryTypes:)","kind":"symbol","type":"topic","url":"\/documentation\/pointsdk\/point\/setuphealthkitintegration(querytypes:)"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/ActiveEnergyBurnedQuery":{"role":"symbol","title":"ActiveEnergyBurnedQuery","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActiveEnergyBurnedQuery"}],"abstract":[],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/ActiveEnergyBurnedQuery","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ActiveEnergyBurnedQuery"}],"url":"\/documentation\/pointsdk\/activeenergyburnedquery"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/BasalEnergyBurnedQuery":{"role":"symbol","title":"BasalEnergyBurnedQuery","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasalEnergyBurnedQuery"}],"abstract":[],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/BasalEnergyBurnedQuery","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BasalEnergyBurnedQuery"}],"url":"\/documentation\/pointsdk\/basalenergyburnedquery"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/MindfulnessQuery":{"role":"symbol","title":"MindfulnessQuery","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MindfulnessQuery"}],"abstract":[],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/MindfulnessQuery","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MindfulnessQuery"}],"url":"\/documentation\/pointsdk\/mindfulnessquery"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/Point/setUserToken(accessToken:shouldSyncData:)":{"role":"symbol","title":"setUserToken(accessToken:shouldSyncData:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setUserToken"},{"kind":"text","text":"("},{"kind":"externalParam","text":"accessToken"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"shouldSyncData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">?"}],"abstract":[{"type":"text","text":"Set the user token to access the "},{"type":"codeVoice","code":"Point API"},{"type":"text","text":" and optionally runs a sync to get the user past data and upload to "},{"type":"codeVoice","code":"Point"},{"type":"text","text":" database if its the first usage during the session."}],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/Point\/setUserToken(accessToken:shouldSyncData:)","kind":"symbol","type":"topic","url":"\/documentation\/pointsdk\/point\/setusertoken(accesstoken:shouldsyncdata:)"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/RestingHeartRateQuery":{"role":"symbol","title":"RestingHeartRateQuery","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RestingHeartRateQuery"}],"abstract":[],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/RestingHeartRateQuery","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RestingHeartRateQuery"}],"url":"\/documentation\/pointsdk\/restingheartratequery"},"https://developer.apple.com/documentation/healthkit":{"title":"HealthKit","titleInlineContent":[{"type":"text","text":"HealthKit"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/healthkit","url":"https:\/\/developer.apple.com\/documentation\/healthkit"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/StepCountQuery":{"role":"symbol","title":"StepCountQuery","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StepCountQuery"}],"abstract":[],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/StepCountQuery","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StepCountQuery"}],"url":"\/documentation\/pointsdk\/stepcountquery"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/BatchSyncResult":{"role":"symbol","title":"BatchSyncResult","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BatchSyncResult"}],"abstract":[],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/BatchSyncResult","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BatchSyncResult"}],"url":"\/documentation\/pointsdk\/batchsyncresult"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/SleepQuery":{"role":"symbol","title":"SleepQuery","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SleepQuery"}],"abstract":[],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/SleepQuery","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SleepQuery"}],"url":"\/documentation\/pointsdk\/sleepquery"},"https://developer.apple.com/documentation/swift/asyncthrowingstream":{"title":"AsyncThrowingStream","titleInlineContent":[{"type":"text","text":"AsyncThrowingStream"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swift\/asyncthrowingstream","url":"https:\/\/developer.apple.com\/documentation\/swift\/asyncthrowingstream"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/WorkoutQuery":{"role":"symbol","title":"WorkoutQuery","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WorkoutQuery"}],"abstract":[],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/WorkoutQuery","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WorkoutQuery"}],"url":"\/documentation\/pointsdk\/workoutquery"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/SyncResult":{"role":"symbol","title":"SyncResult","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyncResult"}],"abstract":[],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/SyncResult","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SyncResult"}],"url":"\/documentation\/pointsdk\/syncresult"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/HeartRateVariabilitySDNNQuery":{"role":"symbol","title":"HeartRateVariabilitySDNNQuery","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HeartRateVariabilitySDNNQuery"}],"abstract":[],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/HeartRateVariabilitySDNNQuery","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HeartRateVariabilitySDNNQuery"}],"url":"\/documentation\/pointsdk\/heartratevariabilitysdnnquery"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/HealthQueryType":{"role":"symbol","title":"HealthQueryType","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HealthQueryType"}],"abstract":[{"type":"text","text":"Enum representing health kit types, used to configure the SDK for requesting user permissions and collecting data."}],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/HealthQueryType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HealthQueryType"}],"url":"\/documentation\/pointsdk\/healthquerytype"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/HeartRateQuery":{"role":"symbol","title":"HeartRateQuery","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HeartRateQuery"}],"abstract":[],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/HeartRateQuery","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HeartRateQuery"}],"url":"\/documentation\/pointsdk\/heartratequery"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/Vo2MaxQuery":{"role":"symbol","title":"Vo2MaxQuery","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Vo2MaxQuery"}],"abstract":[],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/Vo2MaxQuery","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Vo2MaxQuery"}],"url":"\/documentation\/pointsdk\/vo2maxquery"}}}