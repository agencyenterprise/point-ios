{"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All health kit methods require previous user authorization on the data types. Check the "},{"type":"strong","inlineContent":[{"type":"text","text":"Permissions"}]},{"type":"text","text":" session."}]}]},{"anchor":"Permissions","level":2,"type":"heading","text":"Permissions"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Request authorization for all types defined on SDK setup, it is recommended to do it before login or other SDK methods."}]},{"type":"codeListing","syntax":"swift","code":["@MainActor","func requestPermissions() async {","    guard let pointHealthKitManager = Point.healthKit else { return }","    do {","        try await pointHealthKitManager.requestAuthorizationsIfPossible()","    } catch {","        print(\"Error requesting authorization: \\(error.localizedDescription)\")","    }","}"]},{"anchor":"Basic-Sync","level":2,"type":"heading","text":"Basic Sync"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Runs a custom query and sync the result with Point database."}]},{"type":"codeListing","syntax":"swift","code":["func syncHeartRate() async -> SyncResult? {","    guard let healthKitManager = Point.healthKit else { return nil }","    do {","        let startDate = Calendar.current.date(byAdding: .weekOfYear, value: -1, to: Date())!","        return try await healthKitManager.sync(query: .heartRate(startDate: startDate))","    } catch {","        print(error.localizedDescription)","        return nil","    }","}"]},{"type":"aside","style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You can manually run any available query using a custom date range and other filters."}]}]},{"anchor":"Foreground-Listeners","level":2,"type":"heading","text":"Foreground Listeners"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A foreground listener runs a query that monitors Apple’s Health while your app is on foreground. They can be used to automatically get and upload new data from Apple’s Health to the Point database as soon as they are available."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You must create a listener for each type you wish to listen. Enabling a foreground listener automatically triggers a "},{"type":"strong","inlineContent":[{"type":"text","text":"Latest Data"}]},{"type":"text","text":" sync."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can start all listeners by calling "},{"type":"codeVoice","code":"enableAllForegroundListeners()"},{"type":"text","text":". This will start a foreground listeners for each one of the types you have requested to use on the SDK set up."}]},{"type":"codeListing","syntax":"swift","code":["do {","    try await healthKitManager.enableAllForegroundListeners()","} catch {","    print(\"Error starting foreground listeners \\(error)\")","}"]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The starting date of the listener query is the date and time you create the listener. It won’t listen for past data."}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To stop all listeners you can call "},{"type":"codeVoice","code":"stopAllForegroundListeners"},{"type":"text","text":". To stop a specific listener, you can call "},{"type":"codeVoice","code":"stopListener"}]},{"type":"codeListing","syntax":"swift","code":["func stopListener() {","    stopAllForegroundListeners()","    \/\/ or","    stopListener(type: .workout)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Alternatively, if you wish to keep track of the sync result of each new sample, you can call "},{"type":"codeVoice","code":"listen(type: HealthQueryType)"},{"type":"text","text":", which returns a "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/asyncthrowingstream"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["let workoutListenerTask: Task<(), Error>?","","func listenWorkoutSamples() async {","    do {","        let stream = try await healthKitManager.listen(type: .workout)","        workoutListenerTask = Task { @MainActor in","            do {","                for try await sampleResult in stream {","                    print(sampleResult)","                }","            } catch {","                print(error.localizedDescription)","            }","        }","    } catch {","        print(\"Error starting workout foreground listener \\(error.localizedDescription)\")","    }","}"]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Canceling the Task which contains the "},{"type":"codeVoice","code":"AsyncThrowingStream"},{"type":"text","text":" you received will stop the listener."}]}]},{"anchor":"Background-Listeners","level":2,"type":"heading","text":"Background Listeners"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Background listeners run on top of HealthKit’s background delivery. When a background listener is set, it wakes up your app whenever a process adds new samples of the specified type, and then syncs those to the Point database."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"They are split into two parts: setup and enable."}]},{"anchor":"Setup","level":3,"type":"heading","text":"Setup"},{"type":"paragraph","inlineContent":[{"type":"text","text":"First, you need to setup the background queries you wish to run. This must be done as soon as possible, such as when the app finishes launching."}]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This can be done (and we encourage you to do so) before asking for user authorization for the given type. If the user denies authorization, the query will simply have no effect."}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can set up background queries for all types you have set up the SDK with."}]},{"type":"codeListing","syntax":"swift","code":["func setupAllBackgroundQueries() async {","    guard let healthKitManager = healthKitManager else { return }","    ","    await healthKitManager.setupAllBackgroundQueries()","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also setup a background query for just a specific type."}]},{"type":"codeListing","syntax":"swift","code":["func setupHeartRateBackgroundQuery() async {","    guard let healthKitManager = Point.healthKit else { return }","    ","    await healthKitManager.setupBackgroundQuery(for: .heartRate)","}"]},{"anchor":"Enable","level":3,"type":"heading","text":"Enable"},{"type":"paragraph","inlineContent":[{"type":"text","text":"After asking for user permission for the desired sample types, you must enable the background listeners you have set up."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can enable the background listeners for all types you have set up the SDK with."}]},{"type":"codeListing","syntax":"swift","code":["func enableAllBackgroundListeners() async {","    guard let healthKitManager = Point.healthKit else { return }","    do {","        let result = try await healthKitManager.enableAllBackgroundDelivery()","        print(\"Background Delivery Enabled: \\(result)\")","    } catch {","        print(\"Background Delivery Error:\", error)","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also enable a background listener for just a specific type."}]},{"type":"codeListing","syntax":"swift","code":["func enableBackgroundListener() async {","    guard let healthKitManager = Point.healthKit else { return }","    do {","        let isEnabled = try await healthKitManager.enableBackgroundDelivery(for: HealthQueryType.heartRate)","        print(\"Background Delivery Enabled: \\(isEnabled)\")","    } catch {","        print(\"Background Delivery Error:\", error)","    }","}"]},{"type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If you plan on supporting background listeners, set up all your types as soon as possible in application launch, for more information see: "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/healthkit\/hkhealthstore\/1614175-enablebackgrounddelivery"}]}]},{"type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For iOS 15 you must enable the HealthKit Background Delivery by adding the com.apple.developer.healthkit.background-delivery entitlement to your app."}]}]},{"anchor":"Stop","level":3,"type":"heading","text":"Stop"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Stopping a background listener will make any changes made on Apple’s Health unnoticeable while the app is not on foreground."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can stop background delivery for specific type."}]},{"type":"codeListing","syntax":"swift","code":["func stopBackgroundListener() async {","    do {","        guard let healthKitManager = Point.healthKit else { return }","        try await healthKitManager.disableBackgroundDelivery(for: .heartRate)","    } catch {","        print(\"Error disabling background delivery: \\(error.localizedDescription)\")","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Or you can stop all background listeners:"}]},{"type":"codeListing","syntax":"swift","code":["func stopAllBackgroundListeners() async {","    do {","        guard let healthKitManager = Point.healthKit else { return }","        try await healthKitManager.disableAllBackgroundDelivery()","    } catch {","        print(\"Error disabling background delivery: \\(error.localizedDescription)\")","    }","}"]},{"type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Avoid stopping background delivery in the application lifecycle, we recommend using it only on user logout."}]}]},{"anchor":"Historical-Data","level":2,"type":"heading","text":"Historical Data"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Helper functions to get the user past data."}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Fetches and uploads the user historical data for a specific type. This is executed automatically when you call login, so you don’t need to call this function manually unless you turned automatic syncing off."}]},{"type":"codeListing","syntax":"swift","code":["func getHistoricalDataForType(type: HealthQueryType) async {","    do {","        guard let healthKitManager = Point.healthKit else { return }","        let result = try await healthKitManager.syncHistoricalData(sampleType: type)","        print(\"Historical data result: \\(result)\")","    } catch {","        print(\"Error running historical data: \\(error.localizedDescription)\")","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can additionally retrieve historical data of all types you have requested permission."}]},{"type":"codeListing","syntax":"swift","code":["func getAllHistoricalData() async {","    do {","        guard let healthKitManager = Point.healthKit else { return }","        let result = try await healthKitManager.syncAllHistoricalData()","        print(\"Historical data result: \\(result)\")","    } catch {","        print(\"Error running historical data: \\(error.localizedDescription)\")","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"All historical data methods will query samples from an interval before the oldest sample date of the given type. The interval can be from 1 to 6 months, with 3 as default. If the oldest sample is older than one year, no query will be done. The starting date of the query is limited to one year before the current date."}]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Automatic “historical data syncing” is enabled as default. To turn it off, log in with "},{"type":"codeVoice","code":"shouldSyncHistoricalData"},{"type":"text","text":" parameter as false. We strongly recommend to keep it enabled to acquire more accurate and personalized user data."}]}]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All historical data functions are optimized to handle large amounts of data, using multiple Tasks and uploading data in batches."}]}]},{"anchor":"Latest-Data","level":2,"type":"heading","text":"Latest Data"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Helper functions to fill the gap from the latest sync until the current date."}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Fetches and uploads the user latest data for a specific type. This is executed automatically when you setup a foreground listener for this type, so you don’t need to call this function manually unless you turned automatic syncing off."}]},{"type":"codeListing","syntax":"swift","code":["func getLatestDataForType(type: HealthQueryType) async {","    do {","        guard let healthKitManager = Point.healthKit else { return }","        let result = try await healthKitManager.syncLatestData(sampleType: type) ","        print(\"Latest data result: \\(result)\")","    } catch {","        print(\"Error running historical data: \\(error.localizedDescription)\")","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can additionally retrieve the latest samples of all types you have requested permission."}]},{"type":"codeListing","syntax":"swift","code":["func getAllRecentData() async {","    do {","        guard let healthKitManager = Point.healthKit else { return }","        let result = try await healthKitManager.syncAllLatestData()","        print(\"Latest data result: \\(result)\")","    } catch {","        print(\"Error running historical data: \\(error.localizedDescription)\")","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"All latest data queries will query samples from the latest sample date up until now. If the latest sample date is older than six months, then the query will be made from six months up until now."}]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Automatic “latest data syncing” is enabled as default. To turn it off for a specific type you must set the type value in "},{"type":"codeVoice","code":"shouldSyncLatestDataBeforeListening"},{"type":"text","text":" dictionary to "},{"type":"codeVoice","code":"false"},{"type":"text","text":" before setting up the foreground listener. We strongly recommend to keep it enabled to avoid losing user samples."}]}]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All latest data functions are optimized to handle large amounts of data, using multiple Tasks and uploading data in batches."}]}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/pointsdk\/pointhealthkit"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/PointHealthKit","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Use the Health Kit to integrate Apple’s Health Kit with the Point Database."}],"kind":"article","metadata":{"modules":[{"name":"PointSDK"}],"role":"collectionGroup","title":"Point Health Kit"},"hierarchy":{"paths":[["doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK"]]},"topicSections":[{"title":"HealthKit","identifiers":["doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/HealthKitManager","doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/HealthQuery","doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/HealthQueryType","doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/ActiveEnergyBurnedQuery","doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/BasalEnergyBurnedQuery","doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/HeartRateQuery","doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/HeartRateVariabilitySDNNQuery","doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/MindfulnessQuery","doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/RestingHeartRateQuery","doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/SleepQuery","doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/StepCountQuery","doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/Vo2MaxQuery","doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/WorkoutQuery"]},{"title":"API Data","identifiers":["doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/SyncResult","doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/BatchSyncResult"]}],"references":{"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK":{"role":"collection","title":"PointSDK","abstract":[{"type":"text","text":"PointSDK provides high-level access and additional functionality to Apple’s Health Kit by integrating it with Point database."}],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK","kind":"symbol","type":"topic","url":"\/documentation\/pointsdk"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/HealthQueryType":{"role":"symbol","title":"HealthQueryType","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HealthQueryType"}],"abstract":[],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/HealthQueryType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HealthQueryType"}],"url":"\/documentation\/pointsdk\/healthquerytype"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/WorkoutQuery":{"role":"symbol","title":"WorkoutQuery","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WorkoutQuery"}],"abstract":[],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/WorkoutQuery","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WorkoutQuery"}],"url":"\/documentation\/pointsdk\/workoutquery"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/HeartRateQuery":{"role":"symbol","title":"HeartRateQuery","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HeartRateQuery"}],"abstract":[],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/HeartRateQuery","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HeartRateQuery"}],"url":"\/documentation\/pointsdk\/heartratequery"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/StepCountQuery":{"role":"symbol","title":"StepCountQuery","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StepCountQuery"}],"abstract":[],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/StepCountQuery","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StepCountQuery"}],"url":"\/documentation\/pointsdk\/stepcountquery"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/RestingHeartRateQuery":{"role":"symbol","title":"RestingHeartRateQuery","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RestingHeartRateQuery"}],"abstract":[],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/RestingHeartRateQuery","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RestingHeartRateQuery"}],"url":"\/documentation\/pointsdk\/restingheartratequery"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/HealthKitManager":{"role":"symbol","title":"HealthKitManager","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HealthKitManager"}],"abstract":[{"type":"text","text":"Manages the integration with "},{"type":"codeVoice","code":"HealthKit"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/HealthKitManager","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HealthKitManager"}],"url":"\/documentation\/pointsdk\/healthkitmanager"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/HeartRateVariabilitySDNNQuery":{"role":"symbol","title":"HeartRateVariabilitySDNNQuery","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HeartRateVariabilitySDNNQuery"}],"abstract":[],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/HeartRateVariabilitySDNNQuery","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HeartRateVariabilitySDNNQuery"}],"url":"\/documentation\/pointsdk\/heartratevariabilitysdnnquery"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/BatchSyncResult":{"role":"symbol","title":"BatchSyncResult","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BatchSyncResult"}],"abstract":[],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/BatchSyncResult","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BatchSyncResult"}],"url":"\/documentation\/pointsdk\/batchsyncresult"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/ActiveEnergyBurnedQuery":{"role":"symbol","title":"ActiveEnergyBurnedQuery","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActiveEnergyBurnedQuery"}],"abstract":[],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/ActiveEnergyBurnedQuery","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ActiveEnergyBurnedQuery"}],"url":"\/documentation\/pointsdk\/activeenergyburnedquery"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/SleepQuery":{"role":"symbol","title":"SleepQuery","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SleepQuery"}],"abstract":[],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/SleepQuery","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SleepQuery"}],"url":"\/documentation\/pointsdk\/sleepquery"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/SyncResult":{"role":"symbol","title":"SyncResult","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyncResult"}],"abstract":[],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/SyncResult","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SyncResult"}],"url":"\/documentation\/pointsdk\/syncresult"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/MindfulnessQuery":{"role":"symbol","title":"MindfulnessQuery","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MindfulnessQuery"}],"abstract":[],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/MindfulnessQuery","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MindfulnessQuery"}],"url":"\/documentation\/pointsdk\/mindfulnessquery"},"https://developer.apple.com/documentation/healthkit/hkhealthstore/1614175-enablebackgrounddelivery":{"title":"Enable background delivery official docs","titleInlineContent":[{"type":"text","text":"Enable background delivery official docs"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/healthkit\/hkhealthstore\/1614175-enablebackgrounddelivery","url":"https:\/\/developer.apple.com\/documentation\/healthkit\/hkhealthstore\/1614175-enablebackgrounddelivery"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/HealthQuery":{"role":"symbol","title":"HealthQuery","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HealthQuery"}],"abstract":[{"type":"text","text":"Don’t implement this protocol."}],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/HealthQuery","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HealthQuery"}],"url":"\/documentation\/pointsdk\/healthquery"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/Vo2MaxQuery":{"role":"symbol","title":"Vo2MaxQuery","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Vo2MaxQuery"}],"abstract":[],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/Vo2MaxQuery","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Vo2MaxQuery"}],"url":"\/documentation\/pointsdk\/vo2maxquery"},"https://developer.apple.com/documentation/swift/asyncthrowingstream":{"title":"AsyncThrowingStream","titleInlineContent":[{"type":"text","text":"AsyncThrowingStream"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swift\/asyncthrowingstream","url":"https:\/\/developer.apple.com\/documentation\/swift\/asyncthrowingstream"},"doc://co.areyouonpoint.app.PointSDK/documentation/PointSDK/BasalEnergyBurnedQuery":{"role":"symbol","title":"BasalEnergyBurnedQuery","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasalEnergyBurnedQuery"}],"abstract":[],"identifier":"doc:\/\/co.areyouonpoint.app.PointSDK\/documentation\/PointSDK\/BasalEnergyBurnedQuery","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BasalEnergyBurnedQuery"}],"url":"\/documentation\/pointsdk\/basalenergyburnedquery"}}}